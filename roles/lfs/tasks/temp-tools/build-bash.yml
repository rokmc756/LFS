---
- name: Unpack Bash
  become_user: root
  unarchive:
    src: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}.tar.gz"
    dest: "{{ lfs.mnt_dir }}/sources"
    owner: "{{ lfs.user }}"
    group: "{{ lfs.group }}"
    remote_src: yes


- name: Configure Bash
  become_user: root
  shell: |
    export LFS_TGT=$(uname -m)-lfs-linux-gnu &&   \
    ./configure --prefix=/usr                     \
    --build=$(sh support/config.guess)            \
    --host=$LFS_TGT                               \
    --without-bash-malloc                         \
    bash_cv_strtold_broken=no
  args:
    chdir: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}"
  environment:
    LFS: "{{ lfs.mnt_dir }}"


- name: Build Bash
  become_user: root
  shell: |
    make -j {{ use_cores }}
  args:
    chdir: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}"
  environment:
    LFS: "{{ lfs.mnt_dir }}"


- name: Install Bash
  become_user: root
  shell: |
    make -j {{ use_cores }} DESTDIR=$LFS install
  args:
    chdir: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}"
  environment:
    LFS: "{{ lfs.mnt_dir }}"


- name: Create Bin Directory
  become_user: root
  file:
    path: "{{ lfs.mnt_dir }}/bin"
    state: directory
    owner: root
    group: root
    mode: "0755"


- name: Create a symbolic bash link
  file:
    src: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}/bash"
    dest: "{{ lfs.mnt_dir}}/bin/sh"
    owner: root
    group: root
    state: link


#- name: Create a symbolic bash link
#  become_user: root
#  shell: |
#    ln -sv bash $LFS/bin/sh
#  args:
#    chdir: "{{ lfs.mnt_dir }}/sources/bash-{{ lfs.bash_version }}"
#  environment:
#    LFS: "{{ lfs.mnt_dir }}"


