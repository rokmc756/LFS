- name: Create the Sources Directory
  file:
    path: "{{ lfs_root }}/sources/gcc-10.2.0/{{ item }}"
    state: directory
    mode: 755
    owner: root
    group: root
  with_items:
    - mpfr
    - gmp


#- name: Create Symbolic Link
#  file:
#   src: "/opt/application/i99/{{SOURCE_FOLDER}}/"
#   dest: "/opt/application/i99/SYMLINK"
#   state: link


- name: Unpack GCC
  unarchive:
    remote_src: yes
    src: "{{ lfs_root }}/sources/gcc-10.2.0.tar.xz"
    dest: "{{ lfs_root }}/sources"
    # src: "{{ lfs_root }}/sources/gcc-8.2.0.tar.xz"


- name: Create GCC build directory
  file:
    path: "{{ lfs_root }}/sources/gcc-10.2.0/build"
    state: directory
    # path: "{{ lfs_root }}/sources/gcc-8.2.0/build"


- name: Unpack MPFR
  unarchive:
    remote_src: yes
    src: "{{ lfs_root }}/sources/mpfr-4.1.0.tar.xz"
    dest: "{{ lfs_root }}/sources/gcc-10.2.0/mpfr"
    extra_opts: ['--strip-components=1', '--show-stored-names']

    # src: "{{ lfs_root }}/sources/mpfr-4.0.1.tar.xz"
    # dest: "{{ lfs_root }}/sources/gcc-8.2.0"


- name: Unpack GMP
  unarchive:
    remote_src: yes
    src: "{{ lfs_root }}/sources/gmp-6.2.0.tar.xz"
    dest: "{{ lfs_root }}/sources/gcc-10.2.0/gmp"
    extra_opts: ['--strip-components=1', '--show-stored-names']
    # src: "{{ lfs_root }}/sources/gmp-6.1.2.tar.xz"
    # dest: "{{ lfs_root }}/sources/gcc-8.2.0"


- name: Unpack MPC
  unarchive:
    remote_src: yes
    src: "{{ lfs_root }}/sources/mpc-1.1.0.tar.gz"
    dest: "{{ lfs_root }}/sources/gcc-10.2.0"
    # dest: "{{ lfs_root }}/sources/gcc-8.2.0"


- name: Run a script to prepare for the GCC build
  script: scripts/gcc_stage1_prep.sh
  args:
    chdir: "{{ lfs_root }}/sources/gcc-10.2.0"
    # chdir: "{{ lfs_root }}/sources/gcc-8.2.0"


# ../configure --target=$LFS_TGT --prefix=/tools --with-glibc-version=2.11 --with-sysroot=$LFS --with-newlib --without-headers --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
- name: Configure the GCC build
  shell: |
    export LFS_TGT=$(uname -m)-lfs-linux-gnu
    ../configure --target=$LFS_TGT --prefix=/tools --with-glibc-version=2.35 --with-sysroot=$LFS --with-newlib --without-headers --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
  args:
    chdir: "{{ lfs_root }}/sources/gcc-10.2.0/build"
    # chdir: "{{ lfs_root }}/sources/gcc-8.2.0/build"


- name: Build GCC
  shell: make -j 10
  args:
    chdir: "{{ lfs_root }}/sources/gcc-10.2.0/build"
    # chdir: "{{ lfs_root }}/sources/gcc-8.2.0/build"


- name: Install GCC
  shell: make install
  args:
    chdir: "{{ lfs_root }}/sources/gcc-10.2.0/build"
    # chdir: "{{ lfs_root }}/sources/gcc-8.2.0/build"


- name: Clean up the sources
  file:
    path: "{{ lfs_root }}/sources/gcc-10.2.0"
    state: absent
    # path: "{{ lfs_root }}/sources/gcc-8.2.0"


